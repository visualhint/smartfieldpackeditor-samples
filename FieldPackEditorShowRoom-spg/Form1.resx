<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>This is the genuine Microsoft DateTimePicker. It is displayed here for reference in case you want to compare it with the new Smart DateTimePicker.Net.
All common properties that you change above will be reflected here also.</value>
  </data>
  <data name="textBox4.Text" xml:space="preserve">
    <value>This sample demonstrates that with a few lines of code, it is possible to create a custom arrangement of packs and fields. In this scenario, the FieldPackEditor base class is used. A DateTimeFieldPack class is inserted like in the DateTimePicker. Then a generic FieldPack is appended which contains a specially coded WeekNumberField class. Both packs talk together to synchronize a same DateTime value.
With a little more effort, a reusable FieldPack could be created that would attach itself to an existing DateTimeFieldPack and add its week number to the editor.

Field packs have their own characteristics. Look how easy it is to change selectively a background color.</value>
  </data>
  <data name="textBox5.Text" xml:space="preserve">
    <value>The duration (col 5) is linked to a database column storing seconds as double and has been setup to show hours and minutes (format = h'h' M'm') with a maximum value of one week. It is nullable and will display "No value" when null. It is also configured to auto-increment the hours when minutes go from 59 to 0.</value>
  </data>
  <metadata name="Duration.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tableBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>285, 17</value>
  </metadata>
  <metadata name="sampleDataSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>159, 17</value>
  </metadata>
  <metadata name="bindingNavigator1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bindingNavigatorAddNewItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABSklEQVQ4T2MYvODuAvb/t+Zx/r86h+v/
        xRm8/6HCxIPrQI1/HjX+//Ow4f/JyQKkG3B+Oi/cgIM9IqQbcHySIFBz3f8/D6r+72gXJ2zApZk8/89O
        5ft/EqjxSL/Q/33dIkDN5f//3iv6v75B5v+qGrn/SysV/88vVf4/q0gV08BTQH/+eVgP1FQLxJX//9wr
        AeK8/3/vZv7/eyf5/9/bcf//3YwA4pD/k3I0MQ041CsMdu7f+6VAjQVAjdlAjalAjQn//92KBmoM+//v
        RtD/f9f9/nel6WIasLNd4v+WZqn/68DOlf+/pELx/99bMUCN4f+n5mn8n5Cl9b87Q/d/e6r+/+ZEQ8Jh
        MhvoT5Bz/90I+N+ToUNYAzoA+fPfDX8g9vvfmqxPugHd6bpg/4JwfZwR6Qa0JBn8b4g3/F8Ta/y/MtqE
        dAPoBBgYACQj2J51/IhpAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="bindingNavigatorMoveFirstItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABKklEQVQ4T2MYPKBw1vP/TQue/8+c+Pg/
        VAgDhLc/wCnHkDvz2f9VR97/x6UovvvB/+CGa7gNyJjy9P/CfR+wKorvefh/6f7///2rL+A2IKHnyf9p
        W95jKIpovw/WnDnr/3+v0hO4DYjsevS/d/UHFEWhrffAmlvXAW3v/PvfJf8AbgMCmx/+r5v/Dq4ouOXu
        /0V7///vAGrOmPPzv13dz//2GdtxG+BRdf9//rQ3KIrsim//T5/z+79/17f/OoXv/lskrMdtgH3p3f/Z
        k19jKNJPOf/fpOjFf5WsT/+NI5fhNsAi787/1P7XWBUZJJ34L5v29b9u8DzcBhhm3f4f1vISpyL91Mv/
        NXyn4TZAJ+3Gf7/qh3gVqXhMwG2AU+6V/yAFeBUNQsDAAADwdsCrpeWacAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="bindingNavigatorMovePreviousItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAtklEQVQ4T2MYOiC8/cF/KJN0EN/94H9w
        wzXyDIjvefh/6f7///2rL5BuQET7fbDmzFn//3uVniDNgNDWe2DNreuAtnf+/e+Sf4B4A4Jb7v5ftPf/
        /w6g5ow5P//b1f38b5+xnTQX2BXf/p8+5/d//65v/3UK3/23SFhPehjop5z/b1L04r9K1qf/xpHLSDcA
        BAySTvyXTfv6Xzd4HnkGgIB+6uX/Gr7TyDcABFQ8JlBmwGAFDAwA0BRgmAS6UFUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="bindingNavigatorMoveNextItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAo0lEQVQ4T2MYfKBw1vP/UCZ5IHfms/8J
        3ffINyRjytP/8/b//p/QdYc8QxJ6nvyfve/X/86tf/+7lV4m3ZDIrkf/p2z79b9k6d//CdP//rfJPUua
        IYHND/+3rn0P1mxc8uW/dPS1/8aRy4g3xKPq/v+Sue/gmhVdekhzgX3p3f+BLc/I0wwCFnl3/tsUXCFP
        MwgYZt0mXzMI6KTdIF/zUAQMDACgfl+gBzRCOAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="bindingNavigatorMoveLastItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABLElEQVQ4T2MYXKBw1vP/UCYGAMk1LXj+
        P3PiY5xqGHJnPvuf0H0PqwKQ3Koj7/+Htz/AbUDGlKf/5+3//T+h6w6GIpDcwn0f/gc3XMNtQELPk/+z
        9/3637n173+30ssoCkFy07a8/+9ffQG3AZFdj/5P2fbrf8nSv/8Tpv/9b5N7Fq4YJNe7+sN/r9ITuA0I
        bH74v3Xte7Bm45Iv/6Wjr/03jlwG1gCSq5v/7r9L/gHcBnhU3f9fMvcdXLOiSw9cMUguf9qb//YZ23Eb
        YF96939gyzMMzSAAksue/Pq/RcJ63AZY5N35b1NwBUMzCIDkUvtfw72EFRhm3caqGQRAcmEtL//rBs/D
        bYBO2g2ckiA5v+qH/zV8p+E2AB9wyr3yX8VjAhhDhQYFYGAAAL7Rv7O5DE6cAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="textBox3.Text" xml:space="preserve">
    <value>This is a new specialized class derived from the FieldPackEditor. A new field pack and a new field type have also been created. In this demo, the control has been configured to auto-jump, has no fixed width and the delete key is handled. Each field can have its own range and the value of the IP address is settable with a 4 bytes value.</value>
  </data>
  <data name="textBox2.Text" xml:space="preserve">
    <value>The following editor is a LatLongEditor class, derived from FieldPackEditor. Latitude and longitude are independant and can be hidden. The seconds and minutes fields can be hidden and the precision of the last field is customizable.

The TAB key can be used to switch from one pack to the other one. Edit cue jumps at the next field when all characters have been typed in the current field.</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="tableTableAdapter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>432, 17</value>
  </metadata>
</root>